#!/bin/bash
##################################################################
#: Date Created  : (December 05, 2019)
#: Author        : Daniel Griggs
#: Email         : dan@cmdsec.com
#: Version       : 0.10
##################################################################


######################
### VARIABLE BLOCK ###
######################
# OS_VER=$(sw_vers -productVersion | cut -d. -f1,2) # (if 10.10.3) returns 10.10
# USERS=$(dscl . list /users shell | egrep -v '(^_)|(root)|(/usr/bin/false)' | awk '{print $1}')
# MGMT_USER=""
# JAMF_HELPER="/Library/Application Support/JAMF/bin/jamfHelper.app/Contents/MacOS/jamfHelper"
# ICON_PATH="/System/Library/CoreServices/CoreTypes.bundle/Contents/Resources/"
# SCRIPT_NAME=$( echo ${0##*\/} | cut -d. -f1 )
GUI_USER=$(who | grep console | grep -v '_mbsetupuser' | awk '{print $1}') 
echo "$GUI_USER"
#################################
#Â  Items in the dock
#################################  
# "file:///System/Applications/Launchpad.app/"
# "file:///Applications/Safari.app/"
# "file:///System/Applications/Messages.app/"
# "file:///Applications/Slack.app/"
# "file:///Applications/Microsoft%20Outlook.app/"
# "file:///Applications/Microsoft%20Word.app/"
# "file:///Applications/Microsoft%20Excel.app/"
# "file:///Applications/Keynote.app/"
# "file:///Applications/Pages.app/"
# "file:///Applications/BlueJeans.app/"
# "file:///System/Applications/App%20Store.app/"
# "file:///System/Applications/System%20Preferences.app/"
# "file:///Applications/Self%20Service.app/"
DOCK_PLIST_BASE64=""

######################
# END VARIABLE BLOCK #
######################
#
#
#
######################
### FUNCTIONS BLOCK ###
######################
cleanup_finish(){
  echo "Starting cleanup_finish"

}
trap cleanup_finish EXIT

write_plist_to_user_location(){
  echo "start: write_plist_to_user_location"
  rm "/Users/$GUI_USER/Library/Preferences/com.apple.dock.plist"
  echo "$DOCK_PLIST_BASE64" | base64 -D -o "/Users/$GUI_USER/Library/Preferences/com.apple.dock.plist"
  chown "$GUI_USER" "/Users/$GUI_USER/Library/Preferences/com.apple.dock.plist"
  chmod 600 "/Users/$GUI_USER/Library/Preferences/com.apple.dock.plist"
}


######################
# END FUNCTIONS BLOCK #
######################

write_plist_to_user_location

killall Dock





















#end
 
